# GitHub Actions Tutorial: https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions

# https://faun.pub/full-ci-cd-with-docker-github-actions-digitalocean-droplets-container-registry-db2938db8246

#  https://docs.digitalocean.com/products/container-registry/how-to/use-registry-docker-kubernetes/

name: discord-plex-bot-ci
run-name: Build & Test
on: [push]

env:
  REGISTRY: 'registry.digitalocean.com/discord-plex-bot-image'
  IMAGE_NAME: 'discord-plex-bot-image'

jobs:
  check:
    name: Build & Test
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Run Formatter
        run: npm run format:check

      - name: Run Linter
        run: npm run lint:check

      - name: Run Unit Tests
        run: npm test

      - name: Compile TypeScript
        run: npm run build

  build:
    name: Build & Push Docker Image
    runs-on: ubuntu-22.04
    needs: check
    if: success() && github.ref == 'refs/heads/master'

    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3

      - name: Build Image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log In To DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Remove Old Image
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

  deploy:
    name: Deploy Image
    runs-on: ubuntu-22.04
    needs: build
    if: success() && github.ref == 'refs/heads/master'

    steps:
      - name: Deploy Image To Droplet
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          # password: ${{ secrets.PASSWORD }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          debug: true
          port: ${{ secrets.PORT }}
          envs: IMAGE_NAME,REGISTRY,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},GITHUB_SHA
          script: |
            # Login to registry
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com
            # Stop running container
            docker stop $(echo $IMAGE_NAME)
            # Remove old container
            docker rm $(echo $IMAGE_NAME)
            # Run a new container from a new image
            docker run -d \
            --restart always \
            --name $(echo $IMAGE_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
